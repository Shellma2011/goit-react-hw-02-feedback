{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["SectionStyle","styled","section","TitleStyle","h2","Section","title","children","ButtonStyle","button","FeedbackOptions","options","name","onLeaveFeedback","type","onClick","MessageStyle","p","Notification","message","StatisticsListStyle","ul","StatisticsItemStyle","li","Statistics","good","neutral","bad","total","positivePercentage","App","state","e","target","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAGMA,EAAeC,IAAOC,QAAV,iUAiBZC,EAAaF,IAAOG,GAAV,qFAMD,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACP,EAAD,WACG,cAACG,EAAD,UAAaG,IACbC,KC3BP,I,EAAMC,EAAcP,IAAOQ,OAAV,qXA6BFC,EAZS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,gBAAlB,OACtB,cAACL,EAAD,CAAaM,KAAK,SAASF,KAAMA,EAAMG,QAASF,EAAhD,SACGF,KCnBCK,EAAef,IAAOgB,EAAV,4QAoBHC,I,IAAAA,EARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,cAACH,EAAD,UAAeG,KCblBC,EAAsBnB,IAAOoB,GAAV,0LAUnBC,EAAsBrB,IAAOsB,GAAV,mTAeV,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9D,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAA4BG,KAC5B,eAACH,EAAD,uBAA+BI,KAC/B,eAACJ,EAAD,mBAA2BK,KAC3B,eAACL,EAAD,qBAA6BM,KAC7B,eAACN,EAAD,iCAAyCO,EAAzC,W,UC5BAC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPd,gBAAkB,SAAAmB,GAChB,IAAMpB,EAAOoB,EAAEC,OAAOrB,KACtB,EAAKsB,UAAS,SAAAC,GACZ,OAAO,eAAGvB,EAAOuB,EAAUvB,GAAQ,O,wDAGvC,WACE,MAA+BwB,KAAKL,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,M,6CAGzB,WACE,OAAOU,KAAKC,MAAOF,KAAKL,MAAMN,KAAOW,KAAKG,qBAAwB,O,oBAEpE,WACE,MAA+BH,KAAKL,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,eAACtB,EAAD,CAASC,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBK,QAAQ,OAAOC,KAAK,OAAOC,gBAAiBuB,KAAKvB,kBAClE,cAAC,EAAD,CACEF,QAAQ,UACRC,KAAK,UACLC,gBAAiBuB,KAAKvB,kBAExB,cAAC,EAAD,CAAiBF,QAAQ,MAAMC,KAAK,MAAMC,gBAAiBuB,KAAKvB,qBAGlE,cAACR,EAAD,CAASC,MAAM,aAAf,SACiC,IAA9B8B,KAAKG,qBACJ,cAAC,EAAD,CAAcpB,QAAQ,yBAEtB,cAACK,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,KAAKG,qBACZV,mBAAoBO,KAAKI,6C,GA3CrBC,aAoDHX,ICvDfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e97bfa4c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst SectionStyle = styled.section`\n  padding: 20px;\n  text-align: center;\n\n  text-align: center;\n  width: 400px;\n  margin: 30px auto;\n\n  border: 1px solid grey;\n  border-radius: 2%;\n\n  font-family: 'Helvetica Neue', Helvetica, Arial;\n  background: white;\n  box-shadow: -1px 15px 30px -12px black;\n  z-index: 9999;\n`;\n\nconst TitleStyle = styled.h2`\n  padding: 10px;\n  font-size: 24px;\n  color: #5c6368;\n`;\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionStyle>\n      {<TitleStyle>{title}</TitleStyle>}\n      {children}\n    </SectionStyle>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ButtonStyle = styled.button`\n  border: 1px solid grey;\n  border-radius: 2%;\n  width: 100px;\n  padding: 5px 15px;\n  background-color: teal;\n  color: #fff;\n  font-weight: 500;\n  margin-left: 5px;\n  margin-right: 5px;\n  font-family: inherit;\n  cursor: pointer;\n  outline: none;\n  box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n  transition: box-shadow 250ms linear;\n`;\n\nconst FeedbackOptions = ({ options, name, onLeaveFeedback }) => (\n  <ButtonStyle type=\"buttom\" name={name} onClick={onLeaveFeedback}>\n    {options}\n  </ButtonStyle>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst MessageStyle = styled.p`\n  padding: 20px;\n  margin: 0px auto;\n  background-color: teal;\n  border: 1px solid grey;\n  border-radius: 2%;\n  box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n  transition: box-shadow 250ms linear;\n  color: white;\n  font-weight: 700;\n`;\n\nfunction Notification({ message }) {\n  return <MessageStyle>{message}</MessageStyle>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StatisticsListStyle = styled.ul`\n  list-style-type: none;\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  color: #5c6368;\n`;\n\nconst StatisticsItemStyle = styled.li`\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  display: flex;\n\n  :nth-last-child(-n + 2) {\n    background-color: teal;\n    color: white;\n    font-weight: 700;\n    box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n    transition: box-shadow 250ms linear;\n  }\n`;\n\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <StatisticsListStyle>\n      <StatisticsItemStyle>Good: {good}</StatisticsItemStyle>\n      <StatisticsItemStyle>Neutral: {neutral}</StatisticsItemStyle>\n      <StatisticsItemStyle>Bad: {bad}</StatisticsItemStyle>\n      <StatisticsItemStyle>Total: {total}</StatisticsItemStyle>\n      <StatisticsItemStyle>Positive feedback: {positivePercentage} %</StatisticsItemStyle>\n    </StatisticsListStyle>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n    this.setState(prevState => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options=\"Good\" name=\"good\" onLeaveFeedback={this.onLeaveFeedback} />\n          <FeedbackOptions\n            options=\"Neutral\"\n            name=\"neutral\"\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n          <FeedbackOptions options=\"Bad\" name=\"bad\" onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}